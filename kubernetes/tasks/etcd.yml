---
- name: Copy the appropriate certificates and private keys to each controller instance
  copy:
    src: "/opt/ssl/{{item}}"
    dest: /etc/etcd/
    owner: root
    group: root
  with_items:
    - ca.pem
    - kubernetes-key.pem
    - kubernetes.pem

- name: Download the official etcd release binaries
  get_url:
    url: https://github.com/coreos/etcd/releases/download/v3.2.11/etcd-v3.2.11-linux-amd64.tar.gz
    dest: /tmp/etcd-v3.2.11-linux-amd64.tar.gz

- name: Extract and install the etcd server and the etcdctl command line utility
  unarchive:
    src: /tmp/etcd-v3.2.11-linux-amd64.tar.gz
    dest: /opt
    copy: no

- name: Copy etcd in /usr/local/bin/
  shell: mv /opt/etcd-v3.2.11-linux-amd64/etcd* /usr/local/bin/

- name: mkdir /etc/etcd and /var/lib/etcd
  file:
    path: "{{item}}"
    recurse: yes
    state: directory
  with_items:
    - /etc/etcd
    - /var/lib/etcd

- name: Create the etcd.service systemd unit file
  template:
    src: etcd.service
    dest: /etc/systemd/system/etcd.service

- shell: systemctl daemon-reload
- shell: systemctl enable etcd
- shell: systemctl restart etcd

- wait_for:
    timeout: 10

- name: Check etcd cluster members
  register: result
  shell: "ETCDCTL_API=3 etcdctl member list"

- debug: var=result.stdout_lines

- name: Download the official Kubernetes release binaries 1
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-apiserver
    dest: /usr/local/bin/kube-apiserver
    mode: 0755

- name: Download the official Kubernetes release binaries 2
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-controller-manager
    dest: /usr/local/bin/kube-controller-manager
    mode: 0755

- name: Download the official Kubernetes release binaries 3
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-scheduler
    dest: /usr/local/bin/kube-scheduler
    mode: 0755

- name: Download the official Kubernetes release binaries 4
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl
    dest: /usr/local/bin/kubectl
    mode: 0755

- name: Create dir /var/lib/kubernetes/
  file:
    path: /var/lib/kubernetes/
    recurse: yes
    state: directory

- name: Copy certificates
  copy:
    src: "/opt/ssl/{{item}}"
    dest: /var/lib/kubernetes/
  with_items:
    - ca.pem
    - ca-key.pem
    - kubernetes-key.pem
    - kubernetes.pem

- name: Copy the encryption-config.yaml encryption config file to each controller instance
  copy:
    src: /opt/ssl/encryption-config.yaml
    dest: /var/lib/kubernetes/encryption-config.yaml

- name: Copy controller services
  template:
    src: "{{item}}"
    dest: /etc/systemd/system/
  with_items:
    - kube-apiserver.service
    - kube-scheduler.service
    - kube-controller-manager.service

- shell: systemctl daemon-reload
- shell: systemctl enable kube-apiserver kube-controller-manager kube-scheduler
- shell: systemctl restart kube-apiserver kube-controller-manager kube-scheduler

- wait_for:
    timeout: 10

- shell: kubectl get componentstatuses
  register: result

- debug: var=result.stdout_lines

- name: Bind the system:kube-apiserver-to-kubelet ClusterRole to the kubernetes user
  template:
    src: "{{item}}"
    dest: /tmp/
  with_items:
    - kube-apiserver-to-kubelet-0.yaml
    - kube-apiserver-to-kubelet-1.yaml

- shell: kubectl apply -f /tmp/kube-apiserver-to-kubelet-0.yaml
- shell: kubectl apply -f /tmp/kube-apiserver-to-kubelet-1.yaml
